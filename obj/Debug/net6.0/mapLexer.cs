//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:\Programowanie\PlayingWithANTLR\TKIK\TKIK\Language\map.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace TKIK.Language {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class mapLexer : Lexer {
	public const int
		EOL=1, WHITESPACE=2, NEWLINE=3, FLOAT=4, INTIGER=5, OPENCURLYBRACKET=6, 
		CLOSECURLYBRACKER=7, COMA=8, ID=9, POINT=10, NORTH=11, EAST=12, WEST=13, 
		SOUTH=14, ROADTYPE=15, BUILDINGTYPE=16, AREATYPE=17, DISCONNECT=18, CONNECT=19;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"EOL", "WHITESPACE", "NEWLINE", "DIGIT", "CHAR", "FLOAT", "INTIGER", "OPENCURLYBRACKET", 
		"CLOSECURLYBRACKER", "COMA", "ID", "POINT", "NORTH", "EAST", "WEST", "SOUTH", 
		"HIGHWAY", "EXPRESSWAY", "TRUNKROAD", "REGIONALROAD", "COUNTRYROAD", "ROADTYPE", 
		"BUILDING", "BRIDGE", "TUNNEL", "BUILDINGTYPE", "GREANAREA", "INDUSTRIALAREA", 
		"BUILDINGONAREA", "WATER", "AREATYPE", "DISCONNECT", "CONNECT"
	};


	public mapLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "' '", null, null, null, "'{'", "'}'", "','", null, "'POINT'", 
		null, null, null, null, null, null, null, "'DISCONNECT'", "'CONNECT'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "EOL", "WHITESPACE", "NEWLINE", "FLOAT", "INTIGER", "OPENCURLYBRACKET", 
		"CLOSECURLYBRACKER", "COMA", "ID", "POINT", "NORTH", "EAST", "WEST", "SOUTH", 
		"ROADTYPE", "BUILDINGTYPE", "AREATYPE", "DISCONNECT", "CONNECT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "map.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x15\x12E\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x3\x2\x5\x2G\n\x2\x3\x2\x3\x2\x5\x2K\n\x2\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x4\x5\x4R\n\x4\x3\x4\x3\x4\x6\x4V\n\x4\r\x4\xE\x4W"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x6\a_\n\a\r\a\xE\a`\x3\a\x3\a\x6\a\x65\n"+
		"\a\r\a\xE\a\x66\x5\ai\n\a\x3\b\x6\bl\n\b\r\b\xE\bm\x3\t\x3\t\x3\n\x3\n"+
		"\x3\v\x3\v\x3\f\x6\fw\n\f\r\f\xE\fx\x3\f\a\f|\n\f\f\f\xE\f\x7F\v\f\x3"+
		"\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13"+
		"\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13"+
		"\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14"+
		"\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17"+
		"\x5\x17\xCA\n\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3"+
		"\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x5\x1B\xE6"+
		"\n\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x5 "+
		"\x11A\n \x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3!\x3\"\x3\"\x3\"\x3"+
		"\"\x3\"\x3\"\x3\"\x3\"\x2\x2\x2#\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x2\v\x2"+
		"\x2\r\x2\x6\xF\x2\a\x11\x2\b\x13\x2\t\x15\x2\n\x17\x2\v\x19\x2\f\x1B\x2"+
		"\r\x1D\x2\xE\x1F\x2\xF!\x2\x10#\x2\x2%\x2\x2\'\x2\x2)\x2\x2+\x2\x2-\x2"+
		"\x11/\x2\x2\x31\x2\x2\x33\x2\x2\x35\x2\x12\x37\x2\x2\x39\x2\x2;\x2\x2"+
		"=\x2\x2?\x2\x13\x41\x2\x14\x43\x2\x15\x3\x2\t\x3\x2\x32;\x4\x2\x43\\\x63"+
		"|\x4\x2..\x30\x30\x4\x2PPpp\x4\x2GGgg\x4\x2YYyy\x4\x2UUuu\x133\x2\x3\x3"+
		"\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3"+
		"\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2"+
		"\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2"+
		"\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2\x35\x3\x2\x2"+
		"\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x3J\x3\x2\x2"+
		"\x2\x5L\x3\x2\x2\x2\aU\x3\x2\x2\x2\tY\x3\x2\x2\x2\v[\x3\x2\x2\x2\r^\x3"+
		"\x2\x2\x2\xFk\x3\x2\x2\x2\x11o\x3\x2\x2\x2\x13q\x3\x2\x2\x2\x15s\x3\x2"+
		"\x2\x2\x17v\x3\x2\x2\x2\x19\x80\x3\x2\x2\x2\x1B\x86\x3\x2\x2\x2\x1D\x88"+
		"\x3\x2\x2\x2\x1F\x8A\x3\x2\x2\x2!\x8C\x3\x2\x2\x2#\x8E\x3\x2\x2\x2%\x96"+
		"\x3\x2\x2\x2\'\xA1\x3\x2\x2\x2)\xAB\x3\x2\x2\x2+\xB8\x3\x2\x2\x2-\xC9"+
		"\x3\x2\x2\x2/\xCB\x3\x2\x2\x2\x31\xD4\x3\x2\x2\x2\x33\xDB\x3\x2\x2\x2"+
		"\x35\xE5\x3\x2\x2\x2\x37\xE7\x3\x2\x2\x2\x39\xF1\x3\x2\x2\x2;\x100\x3"+
		"\x2\x2\x2=\x10F\x3\x2\x2\x2?\x119\x3\x2\x2\x2\x41\x11B\x3\x2\x2\x2\x43"+
		"\x126\x3\x2\x2\x2\x45G\a\xF\x2\x2\x46\x45\x3\x2\x2\x2\x46G\x3\x2\x2\x2"+
		"GH\x3\x2\x2\x2HK\a\f\x2\x2IK\a\xF\x2\x2J\x46\x3\x2\x2\x2JI\x3\x2\x2\x2"+
		"K\x4\x3\x2\x2\x2LM\a\"\x2\x2MN\x3\x2\x2\x2NO\b\x3\x2\x2O\x6\x3\x2\x2\x2"+
		"PR\a\xF\x2\x2QP\x3\x2\x2\x2QR\x3\x2\x2\x2RS\x3\x2\x2\x2SV\a\f\x2\x2TV"+
		"\a\xF\x2\x2UQ\x3\x2\x2\x2UT\x3\x2\x2\x2VW\x3\x2\x2\x2WU\x3\x2\x2\x2WX"+
		"\x3\x2\x2\x2X\b\x3\x2\x2\x2YZ\t\x2\x2\x2Z\n\x3\x2\x2\x2[\\\t\x3\x2\x2"+
		"\\\f\x3\x2\x2\x2]_\x5\t\x5\x2^]\x3\x2\x2\x2_`\x3\x2\x2\x2`^\x3\x2\x2\x2"+
		"`\x61\x3\x2\x2\x2\x61h\x3\x2\x2\x2\x62\x64\t\x4\x2\x2\x63\x65\x5\t\x5"+
		"\x2\x64\x63\x3\x2\x2\x2\x65\x66\x3\x2\x2\x2\x66\x64\x3\x2\x2\x2\x66g\x3"+
		"\x2\x2\x2gi\x3\x2\x2\x2h\x62\x3\x2\x2\x2hi\x3\x2\x2\x2i\xE\x3\x2\x2\x2"+
		"jl\t\x2\x2\x2kj\x3\x2\x2\x2lm\x3\x2\x2\x2mk\x3\x2\x2\x2mn\x3\x2\x2\x2"+
		"n\x10\x3\x2\x2\x2op\a}\x2\x2p\x12\x3\x2\x2\x2qr\a\x7F\x2\x2r\x14\x3\x2"+
		"\x2\x2st\a.\x2\x2t\x16\x3\x2\x2\x2uw\x5\v\x6\x2vu\x3\x2\x2\x2wx\x3\x2"+
		"\x2\x2xv\x3\x2\x2\x2xy\x3\x2\x2\x2y}\x3\x2\x2\x2z|\x5\t\x5\x2{z\x3\x2"+
		"\x2\x2|\x7F\x3\x2\x2\x2}{\x3\x2\x2\x2}~\x3\x2\x2\x2~\x18\x3\x2\x2\x2\x7F"+
		"}\x3\x2\x2\x2\x80\x81\aR\x2\x2\x81\x82\aQ\x2\x2\x82\x83\aK\x2\x2\x83\x84"+
		"\aP\x2\x2\x84\x85\aV\x2\x2\x85\x1A\x3\x2\x2\x2\x86\x87\t\x5\x2\x2\x87"+
		"\x1C\x3\x2\x2\x2\x88\x89\t\x6\x2\x2\x89\x1E\x3\x2\x2\x2\x8A\x8B\t\a\x2"+
		"\x2\x8B \x3\x2\x2\x2\x8C\x8D\t\b\x2\x2\x8D\"\x3\x2\x2\x2\x8E\x8F\aJ\x2"+
		"\x2\x8F\x90\aK\x2\x2\x90\x91\aI\x2\x2\x91\x92\aJ\x2\x2\x92\x93\aY\x2\x2"+
		"\x93\x94\a\x43\x2\x2\x94\x95\a[\x2\x2\x95$\x3\x2\x2\x2\x96\x97\aG\x2\x2"+
		"\x97\x98\aZ\x2\x2\x98\x99\aR\x2\x2\x99\x9A\aT\x2\x2\x9A\x9B\aG\x2\x2\x9B"+
		"\x9C\aU\x2\x2\x9C\x9D\aU\x2\x2\x9D\x9E\aY\x2\x2\x9E\x9F\a\x43\x2\x2\x9F"+
		"\xA0\a[\x2\x2\xA0&\x3\x2\x2\x2\xA1\xA2\aV\x2\x2\xA2\xA3\aT\x2\x2\xA3\xA4"+
		"\aW\x2\x2\xA4\xA5\aP\x2\x2\xA5\xA6\aM\x2\x2\xA6\xA7\aT\x2\x2\xA7\xA8\a"+
		"Q\x2\x2\xA8\xA9\a\x43\x2\x2\xA9\xAA\a\x46\x2\x2\xAA(\x3\x2\x2\x2\xAB\xAC"+
		"\aT\x2\x2\xAC\xAD\aG\x2\x2\xAD\xAE\aI\x2\x2\xAE\xAF\aK\x2\x2\xAF\xB0\a"+
		"Q\x2\x2\xB0\xB1\aP\x2\x2\xB1\xB2\a\x43\x2\x2\xB2\xB3\aN\x2\x2\xB3\xB4"+
		"\aT\x2\x2\xB4\xB5\aQ\x2\x2\xB5\xB6\a\x43\x2\x2\xB6\xB7\a\x46\x2\x2\xB7"+
		"*\x3\x2\x2\x2\xB8\xB9\a\x45\x2\x2\xB9\xBA\aQ\x2\x2\xBA\xBB\aW\x2\x2\xBB"+
		"\xBC\aP\x2\x2\xBC\xBD\aV\x2\x2\xBD\xBE\aT\x2\x2\xBE\xBF\a[\x2\x2\xBF\xC0"+
		"\aT\x2\x2\xC0\xC1\aQ\x2\x2\xC1\xC2\a\x43\x2\x2\xC2\xC3\a\x46\x2\x2\xC3"+
		",\x3\x2\x2\x2\xC4\xCA\x5#\x12\x2\xC5\xCA\x5%\x13\x2\xC6\xCA\x5\'\x14\x2"+
		"\xC7\xCA\x5)\x15\x2\xC8\xCA\x5+\x16\x2\xC9\xC4\x3\x2\x2\x2\xC9\xC5\x3"+
		"\x2\x2\x2\xC9\xC6\x3\x2\x2\x2\xC9\xC7\x3\x2\x2\x2\xC9\xC8\x3\x2\x2\x2"+
		"\xCA.\x3\x2\x2\x2\xCB\xCC\a\x44\x2\x2\xCC\xCD\aW\x2\x2\xCD\xCE\aK\x2\x2"+
		"\xCE\xCF\aN\x2\x2\xCF\xD0\a\x46\x2\x2\xD0\xD1\aK\x2\x2\xD1\xD2\aP\x2\x2"+
		"\xD2\xD3\aI\x2\x2\xD3\x30\x3\x2\x2\x2\xD4\xD5\a\x44\x2\x2\xD5\xD6\aT\x2"+
		"\x2\xD6\xD7\aK\x2\x2\xD7\xD8\a\x46\x2\x2\xD8\xD9\aI\x2\x2\xD9\xDA\aG\x2"+
		"\x2\xDA\x32\x3\x2\x2\x2\xDB\xDC\aV\x2\x2\xDC\xDD\aW\x2\x2\xDD\xDE\aP\x2"+
		"\x2\xDE\xDF\aP\x2\x2\xDF\xE0\aG\x2\x2\xE0\xE1\aN\x2\x2\xE1\x34\x3\x2\x2"+
		"\x2\xE2\xE6\x5/\x18\x2\xE3\xE6\x5\x31\x19\x2\xE4\xE6\x5\x33\x1A\x2\xE5"+
		"\xE2\x3\x2\x2\x2\xE5\xE3\x3\x2\x2\x2\xE5\xE4\x3\x2\x2\x2\xE6\x36\x3\x2"+
		"\x2\x2\xE7\xE8\aI\x2\x2\xE8\xE9\aT\x2\x2\xE9\xEA\aG\x2\x2\xEA\xEB\a\x43"+
		"\x2\x2\xEB\xEC\aP\x2\x2\xEC\xED\a\x43\x2\x2\xED\xEE\aT\x2\x2\xEE\xEF\a"+
		"G\x2\x2\xEF\xF0\a\x43\x2\x2\xF0\x38\x3\x2\x2\x2\xF1\xF2\aK\x2\x2\xF2\xF3"+
		"\aP\x2\x2\xF3\xF4\a\x46\x2\x2\xF4\xF5\aW\x2\x2\xF5\xF6\aU\x2\x2\xF6\xF7"+
		"\aV\x2\x2\xF7\xF8\aT\x2\x2\xF8\xF9\aK\x2\x2\xF9\xFA\a\x43\x2\x2\xFA\xFB"+
		"\aN\x2\x2\xFB\xFC\a\x43\x2\x2\xFC\xFD\aT\x2\x2\xFD\xFE\aG\x2\x2\xFE\xFF"+
		"\a\x43\x2\x2\xFF:\x3\x2\x2\x2\x100\x101\a\x44\x2\x2\x101\x102\aW\x2\x2"+
		"\x102\x103\aK\x2\x2\x103\x104\aN\x2\x2\x104\x105\a\x46\x2\x2\x105\x106"+
		"\aK\x2\x2\x106\x107\aP\x2\x2\x107\x108\aI\x2\x2\x108\x109\aQ\x2\x2\x109"+
		"\x10A\aP\x2\x2\x10A\x10B\a\x43\x2\x2\x10B\x10C\aT\x2\x2\x10C\x10D\aG\x2"+
		"\x2\x10D\x10E\a\x43\x2\x2\x10E<\x3\x2\x2\x2\x10F\x110\aY\x2\x2\x110\x111"+
		"\a\x43\x2\x2\x111\x112\aV\x2\x2\x112\x113\aG\x2\x2\x113\x114\aT\x2\x2"+
		"\x114>\x3\x2\x2\x2\x115\x11A\x5\x37\x1C\x2\x116\x11A\x5\x39\x1D\x2\x117"+
		"\x11A\x5;\x1E\x2\x118\x11A\x5=\x1F\x2\x119\x115\x3\x2\x2\x2\x119\x116"+
		"\x3\x2\x2\x2\x119\x117\x3\x2\x2\x2\x119\x118\x3\x2\x2\x2\x11A@\x3\x2\x2"+
		"\x2\x11B\x11C\a\x46\x2\x2\x11C\x11D\aK\x2\x2\x11D\x11E\aU\x2\x2\x11E\x11F"+
		"\a\x45\x2\x2\x11F\x120\aQ\x2\x2\x120\x121\aP\x2\x2\x121\x122\aP\x2\x2"+
		"\x122\x123\aG\x2\x2\x123\x124\a\x45\x2\x2\x124\x125\aV\x2\x2\x125\x42"+
		"\x3\x2\x2\x2\x126\x127\a\x45\x2\x2\x127\x128\aQ\x2\x2\x128\x129\aP\x2"+
		"\x2\x129\x12A\aP\x2\x2\x12A\x12B\aG\x2\x2\x12B\x12C\a\x45\x2\x2\x12C\x12D"+
		"\aV\x2\x2\x12D\x44\x3\x2\x2\x2\x11\x2\x46JQUW`\x66hmx}\xC9\xE5\x119\x3"+
		"\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace TKIK.Language
