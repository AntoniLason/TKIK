//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:\Programowanie\PlayingWithANTLR\TKIK\TKIK\Language\map.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace TKIK.Language {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class mapLexer : Lexer {
	public const int
		T__0=1, T__1=2, ROADTYPE=3, BUILDINGTYPE=4, AREATYPE=5, POINT=6, INTEGER=7, 
		DIGIT=8, IDENTIFIER=9, WHITESPACE=10, NEWLINE=11;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "HIGHWAY", "EXPRESSWAY", "TRUNKROAD", "REGIONALROAD", 
		"COUNTRYROAD", "ROADTYPE", "BUILDING", "BRIDGE", "TUNNEL", "BUILDINGTYPE", 
		"GREANAREA", "INDUSTRIALAREA", "BUILDINGONAREA", "WATER", "AREATYPE", 
		"POINT", "INTEGER", "DIGIT", "IDENTIFIER", "WHITESPACE", "NEWLINE"
	};


	public mapLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", null, null, null, null, null, null, null, "' '"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "ROADTYPE", "BUILDINGTYPE", "AREATYPE", "POINT", "INTEGER", 
		"DIGIT", "IDENTIFIER", "WHITESPACE", "NEWLINE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "map.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\r\x124\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x3\x2\x3\x2\x3\x3\x3\x3"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x5\x4\x44\n\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x5\x5Z\n\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x5\x6"+
		"n\n\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x5\a\x88\n\a"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x5\b\xA0\n\b\x3\t\x3\t\x3\t\x3"+
		"\t\x3\t\x5\t\xA7\n\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v"+
		"\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r"+
		"\x3\r\x3\r\x5\r\xC3\n\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3"+
		"\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3"+
		"\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x5"+
		"\x12\xF7\n\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13"+
		"\x3\x13\x3\x13\x5\x13\x103\n\x13\x3\x14\x5\x14\x106\n\x14\x3\x14\x6\x14"+
		"\x109\n\x14\r\x14\xE\x14\x10A\x3\x15\x3\x15\x3\x16\x3\x16\a\x16\x111\n"+
		"\x16\f\x16\xE\x16\x114\v\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x5\x18"+
		"\x11B\n\x18\x3\x18\x3\x18\x6\x18\x11F\n\x18\r\x18\xE\x18\x120\x3\x18\x3"+
		"\x18\x2\x2\x2\x19\x3\x2\x3\x5\x2\x4\a\x2\x2\t\x2\x2\v\x2\x2\r\x2\x2\xF"+
		"\x2\x2\x11\x2\x5\x13\x2\x2\x15\x2\x2\x17\x2\x2\x19\x2\x6\x1B\x2\x2\x1D"+
		"\x2\x2\x1F\x2\x2!\x2\x2#\x2\a%\x2\b\'\x2\t)\x2\n+\x2\v-\x2\f/\x2\r\x3"+
		"\x2\x5\x3\x2\x32;\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63"+
		"|\x12C\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x19\x3"+
		"\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2"+
		"\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x3\x31\x3\x2\x2\x2"+
		"\x5\x33\x3\x2\x2\x2\a\x43\x3\x2\x2\x2\tY\x3\x2\x2\x2\vm\x3\x2\x2\x2\r"+
		"\x87\x3\x2\x2\x2\xF\x9F\x3\x2\x2\x2\x11\xA6\x3\x2\x2\x2\x13\xA8\x3\x2"+
		"\x2\x2\x15\xB1\x3\x2\x2\x2\x17\xB8\x3\x2\x2\x2\x19\xC2\x3\x2\x2\x2\x1B"+
		"\xC4\x3\x2\x2\x2\x1D\xCE\x3\x2\x2\x2\x1F\xDD\x3\x2\x2\x2!\xEC\x3\x2\x2"+
		"\x2#\xF6\x3\x2\x2\x2%\x102\x3\x2\x2\x2\'\x105\x3\x2\x2\x2)\x10C\x3\x2"+
		"\x2\x2+\x10E\x3\x2\x2\x2-\x115\x3\x2\x2\x2/\x11E\x3\x2\x2\x2\x31\x32\a"+
		"*\x2\x2\x32\x4\x3\x2\x2\x2\x33\x34\a+\x2\x2\x34\x6\x3\x2\x2\x2\x35\x36"+
		"\aJ\x2\x2\x36\x37\aK\x2\x2\x37\x38\aI\x2\x2\x38\x39\aJ\x2\x2\x39:\aY\x2"+
		"\x2:;\a\x43\x2\x2;\x44\a[\x2\x2<=\aj\x2\x2=>\ak\x2\x2>?\ai\x2\x2?@\aj"+
		"\x2\x2@\x41\ay\x2\x2\x41\x42\a\x63\x2\x2\x42\x44\a{\x2\x2\x43\x35\x3\x2"+
		"\x2\x2\x43<\x3\x2\x2\x2\x44\b\x3\x2\x2\x2\x45\x46\aG\x2\x2\x46G\aZ\x2"+
		"\x2GH\aR\x2\x2HI\aT\x2\x2IJ\aG\x2\x2JK\aU\x2\x2KL\aU\x2\x2LM\aY\x2\x2"+
		"MN\a\x43\x2\x2NZ\a[\x2\x2OP\ag\x2\x2PQ\az\x2\x2QR\ar\x2\x2RS\at\x2\x2"+
		"ST\ag\x2\x2TU\au\x2\x2UV\au\x2\x2VW\ay\x2\x2WX\a\x63\x2\x2XZ\a{\x2\x2"+
		"Y\x45\x3\x2\x2\x2YO\x3\x2\x2\x2Z\n\x3\x2\x2\x2[\\\aV\x2\x2\\]\aT\x2\x2"+
		"]^\aW\x2\x2^_\aP\x2\x2_`\aM\x2\x2`\x61\aT\x2\x2\x61\x62\aQ\x2\x2\x62\x63"+
		"\a\x43\x2\x2\x63n\a\x46\x2\x2\x64\x65\av\x2\x2\x65\x66\at\x2\x2\x66g\a"+
		"w\x2\x2gh\ap\x2\x2hi\am\x2\x2ij\at\x2\x2jk\aq\x2\x2kl\a\x63\x2\x2ln\a"+
		"\x66\x2\x2m[\x3\x2\x2\x2m\x64\x3\x2\x2\x2n\f\x3\x2\x2\x2op\aT\x2\x2pq"+
		"\aG\x2\x2qr\aI\x2\x2rs\aK\x2\x2st\aQ\x2\x2tu\aP\x2\x2uv\a\x43\x2\x2vw"+
		"\aN\x2\x2wx\aT\x2\x2xy\aQ\x2\x2yz\a\x43\x2\x2z\x88\a\x46\x2\x2{|\at\x2"+
		"\x2|}\ag\x2\x2}~\ai\x2\x2~\x7F\ak\x2\x2\x7F\x80\aq\x2\x2\x80\x81\ap\x2"+
		"\x2\x81\x82\a\x63\x2\x2\x82\x83\an\x2\x2\x83\x84\at\x2\x2\x84\x85\aq\x2"+
		"\x2\x85\x86\a\x63\x2\x2\x86\x88\a\x66\x2\x2\x87o\x3\x2\x2\x2\x87{\x3\x2"+
		"\x2\x2\x88\xE\x3\x2\x2\x2\x89\x8A\a\x45\x2\x2\x8A\x8B\aQ\x2\x2\x8B\x8C"+
		"\aW\x2\x2\x8C\x8D\aP\x2\x2\x8D\x8E\aV\x2\x2\x8E\x8F\aT\x2\x2\x8F\x90\a"+
		"[\x2\x2\x90\x91\aT\x2\x2\x91\x92\aQ\x2\x2\x92\x93\a\x43\x2\x2\x93\xA0"+
		"\a\x46\x2\x2\x94\x95\a\x65\x2\x2\x95\x96\aq\x2\x2\x96\x97\aw\x2\x2\x97"+
		"\x98\ap\x2\x2\x98\x99\av\x2\x2\x99\x9A\at\x2\x2\x9A\x9B\a{\x2\x2\x9B\x9C"+
		"\at\x2\x2\x9C\x9D\aq\x2\x2\x9D\x9E\a\x63\x2\x2\x9E\xA0\a\x66\x2\x2\x9F"+
		"\x89\x3\x2\x2\x2\x9F\x94\x3\x2\x2\x2\xA0\x10\x3\x2\x2\x2\xA1\xA7\x5\a"+
		"\x4\x2\xA2\xA7\x5\t\x5\x2\xA3\xA7\x5\v\x6\x2\xA4\xA7\x5\r\a\x2\xA5\xA7"+
		"\x5\xF\b\x2\xA6\xA1\x3\x2\x2\x2\xA6\xA2\x3\x2\x2\x2\xA6\xA3\x3\x2\x2\x2"+
		"\xA6\xA4\x3\x2\x2\x2\xA6\xA5\x3\x2\x2\x2\xA7\x12\x3\x2\x2\x2\xA8\xA9\a"+
		"\x44\x2\x2\xA9\xAA\aW\x2\x2\xAA\xAB\aK\x2\x2\xAB\xAC\aN\x2\x2\xAC\xAD"+
		"\a\x46\x2\x2\xAD\xAE\aK\x2\x2\xAE\xAF\aP\x2\x2\xAF\xB0\aI\x2\x2\xB0\x14"+
		"\x3\x2\x2\x2\xB1\xB2\a\x44\x2\x2\xB2\xB3\aT\x2\x2\xB3\xB4\aK\x2\x2\xB4"+
		"\xB5\a\x46\x2\x2\xB5\xB6\aI\x2\x2\xB6\xB7\aG\x2\x2\xB7\x16\x3\x2\x2\x2"+
		"\xB8\xB9\aV\x2\x2\xB9\xBA\aW\x2\x2\xBA\xBB\aP\x2\x2\xBB\xBC\aP\x2\x2\xBC"+
		"\xBD\aG\x2\x2\xBD\xBE\aN\x2\x2\xBE\x18\x3\x2\x2\x2\xBF\xC3\x5\x13\n\x2"+
		"\xC0\xC3\x5\x15\v\x2\xC1\xC3\x5\x17\f\x2\xC2\xBF\x3\x2\x2\x2\xC2\xC0\x3"+
		"\x2\x2\x2\xC2\xC1\x3\x2\x2\x2\xC3\x1A\x3\x2\x2\x2\xC4\xC5\aI\x2\x2\xC5"+
		"\xC6\aT\x2\x2\xC6\xC7\aG\x2\x2\xC7\xC8\a\x43\x2\x2\xC8\xC9\aP\x2\x2\xC9"+
		"\xCA\a\x43\x2\x2\xCA\xCB\aT\x2\x2\xCB\xCC\aG\x2\x2\xCC\xCD\a\x43\x2\x2"+
		"\xCD\x1C\x3\x2\x2\x2\xCE\xCF\aK\x2\x2\xCF\xD0\aP\x2\x2\xD0\xD1\a\x46\x2"+
		"\x2\xD1\xD2\aW\x2\x2\xD2\xD3\aU\x2\x2\xD3\xD4\aV\x2\x2\xD4\xD5\aT\x2\x2"+
		"\xD5\xD6\aK\x2\x2\xD6\xD7\a\x43\x2\x2\xD7\xD8\aN\x2\x2\xD8\xD9\a\x43\x2"+
		"\x2\xD9\xDA\aT\x2\x2\xDA\xDB\aG\x2\x2\xDB\xDC\a\x43\x2\x2\xDC\x1E\x3\x2"+
		"\x2\x2\xDD\xDE\a\x44\x2\x2\xDE\xDF\aW\x2\x2\xDF\xE0\aK\x2\x2\xE0\xE1\a"+
		"N\x2\x2\xE1\xE2\a\x46\x2\x2\xE2\xE3\aK\x2\x2\xE3\xE4\aP\x2\x2\xE4\xE5"+
		"\aI\x2\x2\xE5\xE6\aQ\x2\x2\xE6\xE7\aP\x2\x2\xE7\xE8\a\x43\x2\x2\xE8\xE9"+
		"\aT\x2\x2\xE9\xEA\aG\x2\x2\xEA\xEB\a\x43\x2\x2\xEB \x3\x2\x2\x2\xEC\xED"+
		"\aY\x2\x2\xED\xEE\a\x43\x2\x2\xEE\xEF\aV\x2\x2\xEF\xF0\aG\x2\x2\xF0\xF1"+
		"\aT\x2\x2\xF1\"\x3\x2\x2\x2\xF2\xF7\x5\x1B\xE\x2\xF3\xF7\x5\x1D\xF\x2"+
		"\xF4\xF7\x5\x1F\x10\x2\xF5\xF7\x5!\x11\x2\xF6\xF2\x3\x2\x2\x2\xF6\xF3"+
		"\x3\x2\x2\x2\xF6\xF4\x3\x2\x2\x2\xF6\xF5\x3\x2\x2\x2\xF7$\x3\x2\x2\x2"+
		"\xF8\xF9\aR\x2\x2\xF9\xFA\aQ\x2\x2\xFA\xFB\aK\x2\x2\xFB\xFC\aP\x2\x2\xFC"+
		"\x103\aV\x2\x2\xFD\xFE\ar\x2\x2\xFE\xFF\aq\x2\x2\xFF\x100\ak\x2\x2\x100"+
		"\x101\ap\x2\x2\x101\x103\av\x2\x2\x102\xF8\x3\x2\x2\x2\x102\xFD\x3\x2"+
		"\x2\x2\x103&\x3\x2\x2\x2\x104\x106\a/\x2\x2\x105\x104\x3\x2\x2\x2\x105"+
		"\x106\x3\x2\x2\x2\x106\x108\x3\x2\x2\x2\x107\x109\x5)\x15\x2\x108\x107"+
		"\x3\x2\x2\x2\x109\x10A\x3\x2\x2\x2\x10A\x108\x3\x2\x2\x2\x10A\x10B\x3"+
		"\x2\x2\x2\x10B(\x3\x2\x2\x2\x10C\x10D\t\x2\x2\x2\x10D*\x3\x2\x2\x2\x10E"+
		"\x112\t\x3\x2\x2\x10F\x111\t\x4\x2\x2\x110\x10F\x3\x2\x2\x2\x111\x114"+
		"\x3\x2\x2\x2\x112\x110\x3\x2\x2\x2\x112\x113\x3\x2\x2\x2\x113,\x3\x2\x2"+
		"\x2\x114\x112\x3\x2\x2\x2\x115\x116\a\"\x2\x2\x116\x117\x3\x2\x2\x2\x117"+
		"\x118\b\x17\x2\x2\x118.\x3\x2\x2\x2\x119\x11B\a\xF\x2\x2\x11A\x119\x3"+
		"\x2\x2\x2\x11A\x11B\x3\x2\x2\x2\x11B\x11C\x3\x2\x2\x2\x11C\x11F\a\f\x2"+
		"\x2\x11D\x11F\a\xF\x2\x2\x11E\x11A\x3\x2\x2\x2\x11E\x11D\x3\x2\x2\x2\x11F"+
		"\x120\x3\x2\x2\x2\x120\x11E\x3\x2\x2\x2\x120\x121\x3\x2\x2\x2\x121\x122"+
		"\x3\x2\x2\x2\x122\x123\b\x18\x2\x2\x123\x30\x3\x2\x2\x2\x12\x2\x43Ym\x87"+
		"\x9F\xA6\xC2\xF6\x102\x105\x10A\x112\x11A\x11E\x120\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace TKIK.Language
